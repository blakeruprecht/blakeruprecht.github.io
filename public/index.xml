<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blake Ruprecht&#39;s Home Page on Blake Ruprecht</title>
    <link>https://blakeruprecht.github.io/</link>
    <description>Recent content in Blake Ruprecht&#39;s Home Page on Blake Ruprecht</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 24 Jul 2023 15:29:23 -0400</lastBuildDate><atom:link href="https://blakeruprecht.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Black and white thinking</title>
      <link>https://blakeruprecht.github.io/drawing/</link>
      <pubDate>Thu, 15 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/drawing/</guid>
      <description>Black ink on white paper, mostly.
Shadow is the big question with this medium &amp;ndash; how do you represent shades of gray?
You only have two colors, usually limited at the minimum in line thickness by the width of your pen nib (I typically use 0.5 mm).
You can use hasing, stippling, and other techniques to create texture and the appearance of shadow. The denser the ink in a given area, the darker the area will appear from afar.</description>
    </item>
    
    <item>
      <title>Can we build Safe AI?</title>
      <link>https://blakeruprecht.github.io/research/</link>
      <pubDate>Thu, 15 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/research/</guid>
      <description>I&amp;rsquo;ve worked on the AI Alignment/Safety/Risk/Responsibility problem for five years now. I was a Research Assistant @Mizzou advised by Derek Anderson and the Center for Geospatial Intelligence. In our work, we developed novel neuro-symbolic systems that explain their decision-making steps to improve state of the art object detection performance while enhancing AI alignment/safety/etc.
What is the problem? There are many names for the process of creating AIs that don&amp;rsquo;t take over the world and kill us.</description>
    </item>
    
    <item>
      <title>Inside-the-box thinking</title>
      <link>https://blakeruprecht.github.io/woodwork/</link>
      <pubDate>Thu, 15 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/woodwork/</guid>
      <description>If you can build a box, you can build almost anything out of wood. Heck, a lot of the challenge in woodworking is making the most right right angles possible (yeah, you read that right).
I took shop in middle school and it taught me three things: how to not cut off my finger (unlike my teacher), how to sand for hours by hand, and how to build boxes.
For example, furniture.</description>
    </item>
    
    <item>
      <title>How to get better responses from ChatGPT</title>
      <link>https://blakeruprecht.github.io/blog/chatgpt-work-backwards/</link>
      <pubDate>Tue, 16 Jul 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/chatgpt-work-backwards/</guid>
      <description>Modern generative AIs are getting very, very good at responding to questions. Generative AI Large Language Models (LLMs) like ChatGPT, Claude, Gemini, and LLama all respond to language prompts excellently. We are collectively starting to realize the benefits of using AI for work and play. But how do you get the most out of your interactions with these new weird machines?
Suppose you want to learn how to code. Five years ago, this was very difficult, even with Google.</description>
    </item>
    
    <item>
      <title>Pay close attention to compatibility when building a computer</title>
      <link>https://blakeruprecht.github.io/blog/build-a-computer/</link>
      <pubDate>Fri, 12 Jul 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/build-a-computer/</guid>
      <description>Building a computer is a fun journey, especially with the plethora of YouTube tutorials at your fingertips, but the real challenge lies in ensuring your chosen components are compatible. Get this wrong and you may end up with a black screen or, worse, fried components. Here&amp;rsquo;s what you need to know about compatibility to avoid disaster.
Motherboard and CPU. Your motherboard is the cornerstone of your build. Think of it as the backbone that connects and supports all other components.</description>
    </item>
    
    <item>
      <title>How to use Reinforcement Learning</title>
      <link>https://blakeruprecht.github.io/blog/reinforcement-learning/</link>
      <pubDate>Mon, 24 Jun 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/reinforcement-learning/</guid>
      <description>NOTE: This post is still a W.I.P.
RL is a learning paradigm Reinforcement Learning (RL) is a machine learning paradigm. By that I mean it&amp;rsquo;s the way we tell the computer ML agent if it won or lost. Or if it&amp;rsquo;s right or wrong.
You know how agents are run on computers, right? The computers are calculating a bunch of equations. These equations determine the totality of what the agent perceives in the real world, as well as the decision-making process to choose actions.</description>
    </item>
    
    <item>
      <title>Do it yourself EV charger installation</title>
      <link>https://blakeruprecht.github.io/blog/install-an-ev-charger/</link>
      <pubDate>Wed, 27 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/install-an-ev-charger/</guid>
      <description>For the record, I wouldn&amp;rsquo;t recommend you install an EV charger yourself if you have no electrical experience. It&amp;rsquo;s extremely dangerous, and if you mess up, you can very easily catch your house on fire, or worse. However, it&amp;rsquo;s cool to at least now the process in theory, and this way, you can see if your electrician is doing it properly as well.
How much does it cost? If it was free, everyone would do it.</description>
    </item>
    
    <item>
      <title>Insects are a great source of nutrients</title>
      <link>https://blakeruprecht.github.io/blog/insect-farming/</link>
      <pubDate>Sat, 23 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/insect-farming/</guid>
      <description>I ate a scorpion in Bangkok and it wasn&amp;rsquo;t good. The outer shell dominated the texture, and the meat tasted vaguely stale. Would not recommend.
I also ate grasshoppers, crickets, mealworms, and bamboo worms. I liked them all, and liked the mealworms so much I bought them many more times for a crunchy snack. They reminded me of a meatier cheese puff &amp;ndash; salty, crunchy, and airy. The crickets had much more substance to them, but were suprisingly good, with a roasted, fishy flavor.</description>
    </item>
    
    <item>
      <title>How to install Python</title>
      <link>https://blakeruprecht.github.io/blog/how-to-python/</link>
      <pubDate>Sun, 17 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/how-to-python/</guid>
      <description>I entered the software field as a mechanical engineer. Even with technical experience and some coding experience, I found the entire software world quite daunting. All the documentation I read assumed I already knew stuff like what this ~ symbol meant, or how to input something like $ cd home into my computer. I didn&amp;rsquo;t even understand why the text looks different with a little box around it.
If you&amp;rsquo;re as new as I was, you&amp;rsquo;ll probably appreciate a step-by-step guide to figuring all of this out.</description>
    </item>
    
    <item>
      <title>How to use Python scientific computing packages</title>
      <link>https://blakeruprecht.github.io/blog/how-to-python-scientific-computing/</link>
      <pubDate>Mon, 04 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/how-to-python-scientific-computing/</guid>
      <description>I&amp;rsquo;ve done 5 years of science research and development using mainly Python, and have used the major scientific computing libraries. While this topic may seem intimidating, the actual usage of each library is typically pretty brief (a few lines of code), so you don&amp;rsquo;t need to be an expert in each library, you just need to generally know what they do so you can use them when you need to. Here&amp;rsquo;s a brief overview with some of the most common code explained.</description>
    </item>
    
    <item>
      <title>What is the terminal?</title>
      <link>https://blakeruprecht.github.io/blog/how-to-terminal/</link>
      <pubDate>Tue, 27 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/how-to-terminal/</guid>
      <description>SUMMARY
Note: I use {curly brackets} to represent variables where you replace the text inside the brackets, and don&amp;rsquo;t type the brackets themselves. This is often used in documentation, but not explained, so be on the lookout. ls lists files; ls -la lists all files the long way cd changes directory mv {dir1/old} {dir2/new} moves a file from the first dir position to the second dir position mkdir {dirname} creates a new directory touch {filename} creates a new file simply grep [options] pattern {files} searchs all the files in {files} for the &amp;ldquo;pattern&amp;rdquo; specified, e.</description>
    </item>
    
    <item>
      <title>How to select an Operating System</title>
      <link>https://blakeruprecht.github.io/blog/how-to-operating-system/</link>
      <pubDate>Sun, 18 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/how-to-operating-system/</guid>
      <description>Okay, so you now have a computer (honestly you probably had one already and skipped [How to select a good computer](How to computer)), what OS? Kidding, I know that most computers already come with an Operating System, so good news &amp;ndash; it&amp;rsquo;s probably fine to just stick with what you&amp;rsquo;ve got, they&amp;rsquo;re all pretty good these days.
MacOS - a good Unix-style OS If you buy a Macbook and it comes with MacOS, keep it.</description>
    </item>
    
    <item>
      <title>How to select a good computer</title>
      <link>https://blakeruprecht.github.io/blog/how-to-computer/</link>
      <pubDate>Mon, 12 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/how-to-computer/</guid>
      <description>I&amp;rsquo;m trained as a computer scientist, so technically I know nothing about computer hardware. That&amp;rsquo;s the domain of computer engineers. Still, I have a lot of experience with computers and can give some general recommendations. This is probably most applicable to people in the USA, but not too sure.
I recommend Apple Macbooks, Dell XPS 13s, and Lenovo Thinkpads in this article. There are many more good computers out there, but I don&amp;rsquo;t have personal experience with others, so I won&amp;rsquo;t recommend them.</description>
    </item>
    
    <item>
      <title>Simple software follows Unix principles</title>
      <link>https://blakeruprecht.github.io/blog/simple-software/</link>
      <pubDate>Mon, 20 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/simple-software/</guid>
      <description>Software is hard I just want to say that I find software quite difficult to work with, and I in theory have a masters degree in computer science. My argument against that is my degree focuses on math, not programming, so anything to do with turning on a computer and getting it to work makes me feel like a monkey. Eventually, I learned that software is a lot like building Lego sets &amp;ndash; the instructions tell you everything you need to know.</description>
    </item>
    
    <item>
      <title>Game Theory applies math to behavior</title>
      <link>https://blakeruprecht.github.io/blog/game-theory/</link>
      <pubDate>Fri, 01 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/game-theory/</guid>
      <description>&amp;ldquo;Intelligence is the ability to get what you want.&amp;rdquo;
As agents, we set goals and figure out how to achieve them. That&amp;rsquo;s what being smart is. Being intelligent is not the ability to learn 100 digits of Pi. That&amp;rsquo;s just pure computation. Being intelligent is reciting those digits to a girl you have a crush on, but only if it works. If she gets the ick, then that behavior was dumb, unless you were purely competing with yourself, in which case it&amp;rsquo;s back to being smart.</description>
    </item>
    
    <item>
      <title>Growth Mindset</title>
      <link>https://blakeruprecht.github.io/blog/growth-mindset/</link>
      <pubDate>Sun, 06 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/growth-mindset/</guid>
      <description>Summary What is growth mindset? Praise effort, not identity Stop trying to be perfect Embrace stress References SUMMARY: Change your mindset to prioritize growth by praising yourself for effort, hard-work, and learning. Talk to yourself like a friend, don&amp;rsquo;t try to be perfect, and engage in positive self-talk. Eventually, you will be making more progress than you ever were with a fixed mindset.
Growth mindset is when you believe you can improve at anything with time and effort.</description>
    </item>
    
    <item>
      <title>Easy cold brew method</title>
      <link>https://blakeruprecht.github.io/blog/brew-coffee-cold/</link>
      <pubDate>Thu, 27 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/brew-coffee-cold/</guid>
      <description>Summary of this essay Why brew yourself? How to brew well Water: 40% of the flavor Fresh beans: 40% of the flavor Freshly ground: 10% of the flavor Brewing consistency: 10% of the flavor The process References Why brew yourself? I go to coffee shops and do not understand how cold brew coffee costs significantly more than hot brew. It must be down to marketing, and the fact that people who don&amp;rsquo;t give a hoot typically aren&amp;rsquo;t going to coffee shops.</description>
    </item>
    
    <item>
      <title>LSTM units incorporate temporal data into NNs</title>
      <link>https://blakeruprecht.github.io/blog/long-short-term-memory/</link>
      <pubDate>Mon, 24 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/long-short-term-memory/</guid>
      <description>Utilizes temporal data, aka LSTM units can use previous information in their determination of current state.
The first sigmoid is the &amp;ldquo;forget-gate&amp;rdquo; $f_t$, the second sigmoid is the &amp;ldquo;input-gate&amp;rdquo;, $i_t$, the tanh is the &amp;ldquo;cell-update&amp;rdquo;, $\tilde{C}_t$. Forget-gate will determine how much of the previous cell-state we need to remember, input-gate determines how much of the new cell-state we need to remember, and cell-update gate normalizes the cell-state between [-1,1] because of the tanh.</description>
    </item>
    
    <item>
      <title>AIs learn through a variety of learning paradigms.</title>
      <link>https://blakeruprecht.github.io/blog/machine-learning-paradigms/</link>
      <pubDate>Wed, 15 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/machine-learning-paradigms/</guid>
      <description>date +++
Supervised Data comes with labels. The network learns the labels associated with the data. It works pretty well, given the labels actually fit the data, otherwise you get lots of False Positives and False Negatives, semantically.
Unsupervised Different techniques are used to learn structure from data. Problem, is there any true underlying structure to data? Do clusters actually exist? It&amp;rsquo;s useful to cluster often, but hard to prove validity.</description>
    </item>
    
    <item>
      <title>ANFIS has gradient problems</title>
      <link>https://blakeruprecht.github.io/blog/anfis/</link>
      <pubDate>Thu, 15 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/anfis/</guid>
      <description>A Fuzzy Neural Network The first major project I worked on was coding up the Adaptive Neuro Fuzzy Inference System (ANFIS) in Python, specifically utilizing the PyTorch package to calculate the gradients. I calculated the gradients by hand to validate PyTorch, but wouldn&amp;rsquo;t you know it, PyTorch knows what it&amp;rsquo;s doing.
ANFIS is a type of artificial neural network that combines the antecedent and consequent logic (fuzzy IF-THEN rules) of fuzzy logic with the backpropagation learning techniques of multilayer perceptrons.</description>
    </item>
    
    <item>
      <title>Neural gas learns a self-organizing map</title>
      <link>https://blakeruprecht.github.io/blog/neural-gas/</link>
      <pubDate>Sun, 27 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/neural-gas/</guid>
      <description>Similar to [[Kohonen map]], a Self-organing Map, but the topology is learned. Goal is to learn a topological structure to relate &amp;ldquo;close&amp;rdquo; datapoints to each other. Winner-takes-most. Growing neural gas starts with two-neurons and keeps adding a bisecting neuron until the stopping criteria is met (e.g. performance measure below threshold)
Algorithm Given an input dataset $x \in \mathbb{R}^n$ Init &amp;ldquo;weights&amp;rdquo; $w_i \in \mathbb{R}^n$ Pick a datapoint $v$ from $x$, For each weight $w_i$, calculate the distance to $v$ For each weight, determine the number (cardinality?</description>
    </item>
    
    <item>
      <title>The Choquet Integral generalizes many metric functions.</title>
      <link>https://blakeruprecht.github.io/blog/choquet-integral/</link>
      <pubDate>Wed, 04 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/choquet-integral/</guid>
      <description>Where $\pi(j)$ sorts the inputs based on their output values, $h_{\pi(j)}$, which is the output for input $x_j$. Little g is a measure such that $g(A) &amp;lt; g(B)$ if $A \subseteq B$, $g(\emptyset) = 0$, $g(\mathbf{X}) = 1$. ChI adheres to monotonicity, idempotency, subcontinuity, etc. This includes the Linear Order Statistic (LOS) the Order Weighted Average (OWA), Maximum, Minimum, etc. $$ \int h \odot g = C_g(h) = \sum_{j=1}^N h_{\pi(i)} \left( g(A_{\pi(j)}) - g(A_{\pi(j-1)}) \right) $$ $\pi$ is the function that sorts the inputs according to their values $h(x_j)$ $A_{\pi(j)}$ is the sorted vector = ${x_{\pi(1)}, x_{\pi(2)}, &amp;hellip;}$ $g$ is the learned measure (subsumes LOS, OWA, etc.</description>
    </item>
    
    <item>
      <title>Multilayer Perceptrons are the basic unit of a NN</title>
      <link>https://blakeruprecht.github.io/blog/multilayer-perceptrons/</link>
      <pubDate>Sat, 29 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/multilayer-perceptrons/</guid>
      <description>A type of NN that implements multiple layers of the [[Perceptron]].
$\mathbf{x}$ = input vector of length $N$
$\mathbf{w}$ = weight vector of length $N$
$\sigma$ = activation function (typically ReLU, tanh, sigmoid, etc.)
$y$ = output scalar
$\hat{y}$ = label scalar
$e$ = error or loss scalar function (typically 1/2e^2)
$$ y = \sigma(w^T \cdot x) $$ $$ e = \frac{1}{2}(\hat{y} - y)^2$$</description>
    </item>
    
    <item>
      <title>Neural Networks (NNs) approximate any function</title>
      <link>https://blakeruprecht.github.io/blog/neural-networks/</link>
      <pubDate>Tue, 11 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/neural-networks/</guid>
      <description>Neural networks are universal function approximators, according to the Universal function approximation theorem. [[multilayer perceptrons]]. Neural Networks eventually got deeper and more sophisticated, becoming the single most useful tool for artificial intelligence.
Activation Functions ReLU TanH Sigmoid Loss Functions (1/2)e^2 Softmax $$ \sigma(z)i = \frac{\exp{z_i}}{\Sigma{j=1}^K \exp{z_j}} $$ $z$ is the input vector, $\in {-\infty,\infty}$, can be pos, neg, zero. $\exp{z}$ is applied to each element of the input vector, gives a pos.</description>
    </item>
    
    <item>
      <title>About this site</title>
      <link>https://blakeruprecht.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/about/</guid>
      <description>Hand made. I coded this website by hand using HTML, CSS, and JavaScript (the basics). The content is managed by a static site generator called Hugo that converts markdown (.md) files to HTML (.html). I previously made a lot more features like menus, day/night mode, etc, but I like websites that are as simple as possible.
Minimal design. Grayscale, minimal, and using the font NotoSans so that &amp;ldquo;AI&amp;rdquo; looks like two uppercase letters and not the name Al.</description>
    </item>
    
  </channel>
</rss>
