<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blake Ruprecht&#39;s Home Page on Blake Ruprecht</title>
    <link>https://blakeruprecht.github.io/</link>
    <description>Recent content in Blake Ruprecht&#39;s Home Page on Blake Ruprecht</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 24 Jul 2023 15:29:23 -0400</lastBuildDate><atom:link href="https://blakeruprecht.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Notes</title>
      <link>https://blakeruprecht.github.io/notes/</link>
      <pubDate>Wed, 25 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/notes/</guid>
      <description> self-love relationships craft science of winning games play metagame exercise nutrition recovery breathe </description>
    </item>
    
    <item>
      <title>How to go barefoot</title>
      <link>https://blakeruprecht.github.io/blog/barefoot/</link>
      <pubDate>Thu, 22 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/barefoot/</guid>
      <description> Take off your shoes and socks </description>
    </item>
    
    <item>
      <title>Black and white thinking</title>
      <link>https://blakeruprecht.github.io/drawing/</link>
      <pubDate>Thu, 15 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/drawing/</guid>
      <description>Black ink on white paper, mostly.
Shadow is the big question with this medium &amp;ndash; how do you represent shades of gray?
You only have two colors, usually limited at the minimum in line thickness by the width of your pen nib (I typically use 0.5 mm).
You can use hasing, stippling, and other techniques to create texture and the appearance of shadow. The denser the ink in a given area, the darker the area will appear from afar.</description>
    </item>
    
    <item>
      <title>Can we build Safe AI?</title>
      <link>https://blakeruprecht.github.io/research/</link>
      <pubDate>Thu, 15 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/research/</guid>
      <description>I&amp;rsquo;ve worked on the AI Alignment/Safety/Risk/Responsibility problem for five years now. I was a Research Assistant @Mizzou advised by Derek Anderson and the Center for Geospatial Intelligence. In our work, we developed novel neuro-symbolic systems that explain their decision-making steps to improve state of the art object detection performance while enhancing AI alignment/safety/etc.
What is the problem? There are many names for the process of creating AIs that don&amp;rsquo;t take over the world and kill us.</description>
    </item>
    
    <item>
      <title>Inside-the-box thinking</title>
      <link>https://blakeruprecht.github.io/woodwork/</link>
      <pubDate>Thu, 15 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/woodwork/</guid>
      <description>If you can build a box, you can build almost anything out of wood. Heck, a lot of the challenge in woodworking is making the most right right angles possible (yeah, you read that right).
I took shop in middle school and it taught me three things: how to not cut off my finger (unlike my teacher), how to sand for hours by hand, and how to build boxes.
For example, furniture.</description>
    </item>
    
    <item>
      <title>How to build your own computer</title>
      <link>https://blakeruprecht.github.io/blog/build-your-own-computer/</link>
      <pubDate>Fri, 12 Jul 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/build-your-own-computer/</guid>
      <description>Building a computer is a fun journey, especially with the plethora of YouTube tutorials at your fingertips, but the real challenge lies in ensuring your chosen components are compatible. Get this wrong and you may end up with a black screen or, worse, fried components. Here&amp;rsquo;s what you need to know about compatibility to avoid disaster.
Motherboard and CPU. Your motherboard is the cornerstone of your build. Think of it as the backbone that connects and supports all other components.</description>
    </item>
    
    <item>
      <title>DCBS hot sauce recipe</title>
      <link>https://blakeruprecht.github.io/blog/dcbs/</link>
      <pubDate>Thu, 20 Jun 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/dcbs/</guid>
      <description>Fresh Ingredients
1/2 cup Cashews soaked 25 Habaneros roughly chopped 1 Yellow Bell Pepper roughly chopped 10 Garlic Cloves smashed 1 Onion roughly chopped 1/2 Lemon juiced Pantry Ingredients
1 quart White Vinegar 2 Tbsp Apple Cider Vinegar 2 Tbsp Maple Syrup 2 Tbsp Soy Sauce 2 Tbsp Olive Oil 1 Tbsp Sesame Oil 4 tsp Mustard Powder 1 tsp Turmeric Powder Algorithm
Soak Cashews in water for 30 min Prep Habaneros, Yellow Bell Pepper, Garlic, Onion Saute Olive Oil, Onion, Garlic until softened Add Habaneros, Yellow Bell Pepper Add White Vinegar, Apple Cider Vinegar, Maple Syrup, Soy Sauce, Sesame Oil, Mustard Powder, Turmeric Powder Bring to a boil, then reduce to a simmer, simmer for 30-45 min (longer is less spicy) Taste and adjust for seasoning Blend in a food processor/blender Pour into sauce jars About Quantity: This makes a ton of hot sauce, like a big pots worth.</description>
    </item>
    
    <item>
      <title>EV charger installation</title>
      <link>https://blakeruprecht.github.io/blog/ev-charger-install/</link>
      <pubDate>Wed, 27 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/ev-charger-install/</guid>
      <description>For the record, I wouldn&amp;rsquo;t recommend you install an EV charger yourself if you have no electrical experience. It&amp;rsquo;s extremely dangerous, and if you mess up, you can very easily catch your house on fire, or worse. However, it&amp;rsquo;s cool to at least now the process in theory, and this way, you can see if your electrician is doing it properly as well.
How much does it cost? If it was free, everyone would do it.</description>
    </item>
    
    <item>
      <title>Insect farming</title>
      <link>https://blakeruprecht.github.io/blog/insect-farming/</link>
      <pubDate>Sat, 23 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/insect-farming/</guid>
      <description>I ate a scorpion in Bangkok and it wasn&amp;rsquo;t good. The outer shell dominated the texture, and the meat tasted vaguely stale. Would not recommend.
I also ate grasshoppers, crickets, mealworms, and bamboo worms. I liked them all, and liked the mealworms so much I bought them many more times for a crunchy snack. They reminded me of a meatier cheese puff &amp;ndash; salty, crunchy, and airy. The crickets had much more substance to them, but were suprisingly good, with a roasted, fishy flavor.</description>
    </item>
    
    <item>
      <title>Python scientific computing packages</title>
      <link>https://blakeruprecht.github.io/blog/python-scipy/</link>
      <pubDate>Sun, 17 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/python-scipy/</guid>
      <description>I&amp;rsquo;ve done 5 years of science research and development using mainly Python, and have used the major scientific computing libraries. While this topic may seem intimidating, the actual usage of each library is typically pretty brief (a few lines of code), so you don&amp;rsquo;t need to be an expert in each library, you just need to generally know what they do so you can use them when you need to. Here&amp;rsquo;s a brief overview with some of the most common code explained.</description>
    </item>
    
    <item>
      <title>How to install Python</title>
      <link>https://blakeruprecht.github.io/blog/python/</link>
      <pubDate>Mon, 04 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/python/</guid>
      <description>Python is the most useful general purpose programming language, probably because it is easy to use. Don&amp;rsquo;t let that fool you, it&amp;rsquo;s still difficult to get this anaconda up and running on your own computer.
Installation instructions Here&amp;rsquo;s what you&amp;rsquo;ll typically see, as concisely as possible. Bold terms are explained in the FAQ.
Download the latest version of Python from the official website for your operating system (Mac, Windows, Linux, etc.</description>
    </item>
    
    <item>
      <title>The terminal can do almost everything</title>
      <link>https://blakeruprecht.github.io/blog/terminal/</link>
      <pubDate>Tue, 27 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/terminal/</guid>
      <description>SUMMARY
Note: I use {curly brackets} to represent variables where you replace the text inside the brackets, and don&amp;rsquo;t type the brackets themselves. This is often used in documentation, but not explained, so be on the lookout. Note: I use code text to represent code that should be typed into the terminal command line. ls lists files; ls -la lists all files the long way cd changes directory, cd .. goes up one dir, cd {dir} takes you to the &amp;ldquo;dir&amp;rdquo; folder mv {dir1/old} {dir2/new} moves a file from the first dir position to the second dir position mv {dir1} {dir2} changes the name of the folder mkdir {dirname} creates a new directory touch {filename} creates a new empty file grep [options] pattern {files} searchs all the files in {files} for the &amp;ldquo;pattern&amp;rdquo; specified, e.</description>
    </item>
    
    <item>
      <title>Linux, MacOS, and Windows are all good</title>
      <link>https://blakeruprecht.github.io/blog/os/</link>
      <pubDate>Sun, 18 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/os/</guid>
      <description>I recently posted about my Linux setup, and I&amp;rsquo;ve come to a shocking realization &amp;ndash; any OS is fine. Strengths and drawbacks, right?
Linux: Cost: FREE Ease of use: ADVANCED USERS, MOSTLY Coding: OTIMAL MacOS: Cost: EXPENSIVE (requires an expensive macbook) Ease of use: EASY TO USE Coding: EASY Windows: Cost: EXPENSIVE (requires a $100 license) Ease of use: FINE Coding: ANNOYING If you already have Windows, my recommendation is to just keep it until you get annoyed enough to need to switch, which could be never.</description>
    </item>
    
    <item>
      <title>Good computers to buy</title>
      <link>https://blakeruprecht.github.io/blog/computer-hardware/</link>
      <pubDate>Mon, 12 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/computer-hardware/</guid>
      <description>I&amp;rsquo;m trained as a computer scientist, so technically I know nothing about computer hardware. That&amp;rsquo;s the domain of computer engineers. Still, I have a lot of experience with computers and can give some general recommendations. This is probably most applicable to people in the USA, but not too sure.
I recommend Apple Macbooks, Dell XPS 13s, and Lenovo Thinkpads in this article. There are many more good computers out there, but I don&amp;rsquo;t have personal experience with others, so I won&amp;rsquo;t recommend them.</description>
    </item>
    
    <item>
      <title>Simple software follows Unix principles</title>
      <link>https://blakeruprecht.github.io/blog/simple-software/</link>
      <pubDate>Mon, 20 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/simple-software/</guid>
      <description>Update 2024-09-27 Of course, I did this as a fun experiment to see if Linux was worth it. It&amp;rsquo;s been a few months of daily driving this setup on my computer, and I can confidently say that it works great. Maybe I&amp;rsquo;ll do it again, maybe I&amp;rsquo;ll install Linux Mint next, maybe I&amp;rsquo;ll go back to MacOS.
I appreciate being able to do this, I&amp;rsquo;m not sure I ever personally want to dedicate the time to this much coding again.</description>
    </item>
    
    <item>
      <title>Game Theory calculates optimal strategies</title>
      <link>https://blakeruprecht.github.io/blog/game-theory/</link>
      <pubDate>Fri, 01 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/game-theory/</guid>
      <description>&amp;ldquo;Intelligence is the ability to get what you want.&amp;rdquo;
As agents, we set goals and figure out how to achieve them. That&amp;rsquo;s what being smart is. Being intelligent is not the ability to learn 100 digits of Pi. That&amp;rsquo;s just pure computation. Being intelligent is reciting those digits to a girl you have a crush on, but only if it works. If she gets the ick, then that behavior was dumb, unless you were purely competing with yourself, in which case it&amp;rsquo;s back to being smart.</description>
    </item>
    
    <item>
      <title>Growth Mindset</title>
      <link>https://blakeruprecht.github.io/blog/growth-mindset/</link>
      <pubDate>Sun, 06 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/growth-mindset/</guid>
      <description>Summary: Change your mindset to prioritize growth by praising yourself for effort, hard-work, and learning. Talk to yourself like a friend, don&amp;rsquo;t try to be perfect, and engage in positive self-talk. Eventually, you will be making more progress than you ever were with a fixed mindset.
Growth mindset is when you believe you can improve at anything with time and effort. Instead of seeing challenges as an internal problem, you see them as a chance to get better and improve.</description>
    </item>
    
    <item>
      <title>How to make cold brew</title>
      <link>https://blakeruprecht.github.io/blog/cold-brew/</link>
      <pubDate>Thu, 27 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/cold-brew/</guid>
      <description>I normally pay \$5-6 for cold brew out at a coffee shop. That&amp;rsquo;s about \$0.45/oz of coffee! I&amp;rsquo;m all for supporting local business, but I am also a local business and need to support myself, so here&amp;rsquo;s how to do it at home. The secrets won&amp;rsquo;t surprise you!
The Process Gather ingredients and tools. The total cost for the tools should be less than $40. Two big jars and a metal filter.</description>
    </item>
    
    <item>
      <title>Machine Learning paradigms</title>
      <link>https://blakeruprecht.github.io/blog/ml-paradigms/</link>
      <pubDate>Mon, 15 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/ml-paradigms/</guid>
      <description>At the highest level, machines learn very similarly to how humans learn. Data is given to the neural network, and then the robot does some calculations and tests it&amp;rsquo;s performance against the environment.
Supervised Learning (SL) Data comes with labels. The network makes an initial random guess at what the labels should be. Then, it compares the guesses to the actual labels, and determines how off it was (total error). It updates the network according to this error.</description>
    </item>
    
    <item>
      <title>LSTM units incorporate temporal data into NNs</title>
      <link>https://blakeruprecht.github.io/blog/lstm/</link>
      <pubDate>Mon, 24 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/lstm/</guid>
      <description>Utilizes temporal data, aka LSTM units can use previous information in their determination of current state.
The first sigmoid is the &amp;ldquo;forget-gate&amp;rdquo; $f_t$, the second sigmoid is the &amp;ldquo;input-gate&amp;rdquo;, $i_t$, the tanh is the &amp;ldquo;cell-update&amp;rdquo;, $\tilde{C}_t$. Forget-gate will determine how much of the previous cell-state we need to remember, input-gate determines how much of the new cell-state we need to remember, and cell-update gate normalizes the cell-state between [-1,1] because of the tanh.</description>
    </item>
    
    <item>
      <title>ANFIS has gradient problems</title>
      <link>https://blakeruprecht.github.io/blog/anfis/</link>
      <pubDate>Thu, 15 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/anfis/</guid>
      <description>It&amp;rsquo;s a Neural Network that incorporates Fuzzy Sets The first major project I worked on was coding up the Adaptive Neuro Fuzzy Inference System (ANFIS) in Python, specifically utilizing the PyTorch package to calculate the gradients. I calculated the gradients by hand to validate PyTorch, but wouldn&amp;rsquo;t you know it, PyTorch knows what it&amp;rsquo;s doing.
ANFIS is a type of artificial neural network that combines the antecedent and consequent logic (fuzzy IF-THEN rules) of fuzzy logic with the backpropagation learning techniques of multilayer perceptrons.</description>
    </item>
    
    <item>
      <title>Neural gas learns a self-organizing map</title>
      <link>https://blakeruprecht.github.io/blog/neural-gas/</link>
      <pubDate>Sun, 27 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/neural-gas/</guid>
      <description>Similar to a Kohonen map, another self-organing map, but this time the topology is learned. Goal is to learn a topological structure to relate &amp;ldquo;close&amp;rdquo; datapoints to each other. Winner-takes-most. Growing neural gas starts with two-neurons and keeps adding a bisecting neuron until the stopping criteria is met (e.g. performance measure below threshold)
Algorithm Given an input dataset $x \in \mathbb{R}^n$ Init &amp;ldquo;weights&amp;rdquo; $w_i \in \mathbb{R}^n$ Pick a datapoint $v$ from $x$, For each weight $w_i$, calculate the distance to $v$ For each weight, determine the number (cardinality?</description>
    </item>
    
    <item>
      <title>The Choquet Integral generalizes metric functions</title>
      <link>https://blakeruprecht.github.io/blog/choquet-integral/</link>
      <pubDate>Wed, 04 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/choquet-integral/</guid>
      <description>This is a really cool integral that basically maps any metric function on sets like the MAXIMUM, MINIMUM, MEDIAN
Choquet Integral: The Math Where $\pi(j)$ sorts the inputs based on their output values, $h_{\pi(j)}$, which is the output for input $x_j$. Little g is a measure such that $g(A) &amp;lt; g(B)$ if $A \subseteq B$, $g(\emptyset) = 0$, $g(\mathbf{X}) = 1$. ChI adheres to monotonicity, idempotency, subcontinuity, etc. This includes the Linear Order Statistic (LOS) the Order Weighted Average (OWA), Maximum, Minimum, etc.</description>
    </item>
    
    <item>
      <title>Multilayer Perceptrons are the basic unit of a NN</title>
      <link>https://blakeruprecht.github.io/blog/multilayer-perceptron/</link>
      <pubDate>Sat, 29 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/multilayer-perceptron/</guid>
      <description>A type of NN that implements multiple layers of the basic perceptron.
$\mathbf{x}$ = input vector (e.g. $\mathbf{x}=[0.3, 5.4, 156.1]$) of length $N$ ($N=3$ in this e.g.), $\mathbf{x} \in [-\infty,\infty]$, can be normalized to [-1,1]$ or $[0,1]$
$\mathbf{w}$ = weight vector of length $N$ in the range $[0,1]$
$\sigma$ = activation function (typically ReLU, tanh, sigmoid, etc.)
$y$ = output scalar
$\hat{y}$ = label scalar
$e$ = error or loss function (typically Mean Squared Error as shown here)</description>
    </item>
    
    <item>
      <title>Neural Networks approximate any function</title>
      <link>https://blakeruprecht.github.io/blog/neural-network/</link>
      <pubDate>Tue, 11 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blog/neural-network/</guid>
      <description>The Universal Function Approximation theorem states that Neural Networks of increasing size and depth can approximate any function in the world. This is amazing.
NNs start as multilayer perceptrons and add MLPs side-by-side to create layers, and add more layers to create depth.
Activation Functions ReLU TanH Sigmoid Loss Functions $\frac{1}{2}e^2$ Softmax $\sigma(z) = e^{z_i} (\Sigma^K_{j=1}e^{z_j})^{-1}$
$z$ is the input vector, $\in {-\infty,\infty}$, can be pos, neg, zero.
$\exp{z}$ is applied to each element of the input vector, gives a pos.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://blakeruprecht.github.io/craft/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/craft/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://blakeruprecht.github.io/play/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/play/</guid>
      <description>Play is important for everyone.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://blakeruprecht.github.io/relationships/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/relationships/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://blakeruprecht.github.io/science/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/science/</guid>
      <description></description>
    </item>
    
    <item>
      <title>breathe</title>
      <link>https://blakeruprecht.github.io/breathe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/breathe/</guid>
      <description>I want to give you a sword. You can&amp;rsquo;t hold it, nor can I, yet you can use it. This sword enables you to slash your thoughts to pieces. With it, you can leave all of your worries behind, and forget about the past.
The sword = doing absolutely nothing.
Well, except for breathing.
Doing absolutely nothing but breathing is non-action.
Not thinking, not wondering, not planning, not moving. Just purely focusing on the sensation of your breath, in and out.</description>
    </item>
    
    <item>
      <title>exercise</title>
      <link>https://blakeruprecht.github.io/exercise/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/exercise/</guid>
      <description>Exercise causes physical adaptations in the body, of which there are 9 identified ones. Anaerobic endurance: ability of heart &amp;amp; lungs to use glycogen for fuel Aerobic endurance: ability of heart &amp;amp; lungs to use oxygen for fuel Long-duration endurance: ability of heart &amp;amp; lungs to use fat for fuel Muscular Technique: ability of a muscle to move properly through full Range of Motion Muscular Strength: force output of a muscle Muscular Speed: contraction speed of a muscle Muscular Power: strength x speed Muscular Hypertrophy: size of a muscle Muscular Endurance: ability of a muscle to perform many contractions So it&amp;rsquo;s pretty darn smart to train your Muscles and your Cardio To train muscles, improve your mobility using yoga and stretches, then improve the strength/power/speed/size of your muscles using calisthenics and/or weight lifting.</description>
    </item>
    
    <item>
      <title>LOVE</title>
      <link>https://blakeruprecht.github.io/love/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/love/</guid>
      <description>Love is all you need.
Stop whatever else you are doing. Stop thinking. Stop moving. Shut off your ears. Keep breathing, and close your eyes.
Pay attention to your breath. Notice your heartbeat.
Do you hear that? You are alive and breathing.</description>
    </item>
    
    <item>
      <title>My Blogshelf</title>
      <link>https://blakeruprecht.github.io/blogshelf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/blogshelf/</guid>
      <description>I want a place where I can recommend my favorite blogs for others to go read. Oh, look, here it is!
BLOGS: I linked my favorite article of theirs mnmlist: by Leo Babauata, great blog about minimalism, this post really hits home for me. zen habits: also by Leo B., covers zen and applying it to life, e.g. having no goals is fun! Wait But Why: Tim Urban does long-form better than anybody, and visualizes important things in fascinating ways.</description>
    </item>
    
    <item>
      <title>My Bookshelf</title>
      <link>https://blakeruprecht.github.io/bookshelf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/bookshelf/</guid>
      <description>This isn&amp;rsquo;t a definitive list, and is nowhere near exhaustive, but I want to shoutout so many different books that I have to start somewhere. I ranked them, but suffice to say if I took time to write about it and put it on this list, it&amp;rsquo;s very important to me in some way.
Books 1-10 The Sun Also Rises - Ernest Hemingway (fiction) The book where I finally got it.</description>
    </item>
    
    <item>
      <title>nutrition</title>
      <link>https://blakeruprecht.github.io/nutrition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/nutrition/</guid>
      <description>Eat as many calories as you burn each day, a TDEE Calculator can help you figure this out. Otherwise, a scale will tell you if you&amp;rsquo;re storing energy (gaining weight) or losing energy (losing weight). Eat protein, close to 0.7-1 gram per pound of bodyweight if you&amp;rsquo;re exercising. Drink as much water as you are thirsty for each day. Follow the Mediterranean diet. Why? On top of caloric energy, humans need five macronutrients (proteins, fats, fiber, water) and a ton of micronutrients (vitamins, minerals) to survive, because the human body is made of proteins, vitamins, etc.</description>
    </item>
    
    <item>
      <title>recovery</title>
      <link>https://blakeruprecht.github.io/recovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blakeruprecht.github.io/recovery/</guid>
      <description> Sleep every night as much as your body needs Clean your teeth twice daily (morning and night) by brushing, ask your Dentist (visit every 6 months) for brushing advice Floss once per day as well Take care of your eyes by distancing them from screens Shower as often as you wish, use organic basic soap Cut your hair whenever you want Use sunscreen if you have light skin Use moiturizer morning and night for skin health </description>
    </item>
    
  </channel>
</rss>
